name: setup-release-branches.yml
on:
  workflow_dispatch:
    inputs:
      date:
        description: "リリース日を数字8桁で入力（例:20240614）"
        required: true

      suffix:
        description: "サフィックスを小文字で入力（例:a）"
        required: true

jobs:
  validate_release-date_and_suffix:
    runs-on: ubuntu-latest
    env:
      RELEASE_DATE: ${{ github.event.inputs.date }}
      SUFFIX: ${{ github.event.inputs.suffix }}
      RELEASE_BRANCH_NAME: release-${{ github.event.inputs.date }}
    steps:
      - uses: actions/checkout@v4
      - name: validate_branch_name
        run: |
          echo "ワークフローを実行しているOSは${{ runner.os }}"
          echo "ブランチ名は$RELEASE_BRANCH_NAME"

          BRANCH_EXISTS=$(git ls-remote --heads origin | grep -q "refs/heads/$RELEASE_BRANCH_NAME"; echo $?)
          if [ $BRANCH_EXISTS -eq 0 ]; then  
          echo "Error: ブランチ $RELEASE_BRANCH_NAME は既に存在します。"
          exit 1
          fi
      - name: validate_release-date
        run: |
          if ! [[ "$RELEASE_DATE" =~ ^[0-9]{8}$ ]]; then
              echo "起動を終了します"
              exit 1
          fi
      - name: validate_suffix
        run: |
          if ! [[ "$SUFFIX" =~ ^[a-z]$ ]]; then
              echo "起動を終了します"
              exit 1
          fi
          echo "releaseブランチを作成します"

  create_release-branch:
    needs: validate_release-date_and_suffix
    runs-on: ubuntu-latest
    env:
      RELEASE_BRANCH_NAME: release-${{ github.event.inputs.date }}
    steps:
      - uses: actions/checkout@v4

      - name: create_release-branch
        run: |
          git checkout -b $RELEASE_BRANCH_NAME
          git push origin $RELEASE_BRANCH_NAME

  create_release-settings-branch:
    needs: create_release-branch
    runs-on: ubuntu-latest
    env:
      RELEASE_SETTINGS_BRANCH_NAME: release-settings/${{ github.event.inputs.date }}
      PARAMETER: ${{ github.event.inputs.date }}${{ github.event.inputs.suffix }}
      dodaWebEnvArray: intro.txt second.txt
      envArrayJavaFront: LIVE local
    steps:
      - uses: actions/checkout@v4

      - name: create_release-settings-branch
        run: git checkout -b $RELEASE_SETTINGS_BRANCH_NAME

      - name: replace_file_parameters_and_commit
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          for dodaWebEnv in $dodaWebEnvArray ; do
              echo files/$dodaWebEnv
              sed -E -i "s/version_script=[0-9]{8}[a-z]$/version_script=${PARAMETER}/" files/$dodaWebEnv
              sed -E -i "s/version_css=[0-9]{8}[a-z]$/version_css=${PARAMETER}/" files/$dodaWebEnv
              sed -E -i "s/version_img=[0-9]{8}[a-z]$/version_img=${PARAMETER}/" files/$dodaWebEnv
              git add files/$dodaWebEnv
          done

            sed -E -i "s/version_script=[0-9]{8}[a-z]$/version_script=${PARAMETER}/" DodaLibrary/src/main/resources/const.properties
            sed -E -i "s/version_css=[0-9]{8}[a-z]$/version_css=${PARAMETER}/" DodaLibrary/src/main/resources/const.properties
            sed -E -i "s/version_img=[0-9]{8}[a-z]$/version_img=${PARAMETER}/" DodaLibrary/src/main/resources/const.properties
            git add DodaLibrary/src/main/resources/const.properties

            for javafrontEnv in $envArrayJavaFront ; do
              echo files/$dodaWebEnv
              sed -E -i "s/version_script=[0-9]{8}[a-z]$/version_script=${PARAMETER}/" Doda-javafront-env/$javafrontEnv/deployment/common.properties
              sed -E -i "s/version_css=[0-9]{8}[a-z]$/version_css=${PARAMETER}/" Doda-javafront-env/$javafrontEnv/deployment/common.properties
              sed -E -i "s/version_img=[0-9]{8}[a-z]$/version_img=${PARAMETER}/" Doda-javafront-env/$javafrontEnv/deployment/common.properties
              git add Doda-javafront-env/$javafrontEnv/deployment/common.properties
          done
          git commit -m "【リリース作業】CDN設定ファイル バージョン更新"
          git push origin $RELEASE_SETTINGS_BRANCH_NAME

  create_pull-request:
    needs: create_release-settings-branch
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_BRANCH_NAME: release-${{ github.event.inputs.date }}
      RELEASE_SETTINGS_BRANCH_NAME: release-settings/${{ github.event.inputs.date }}
      REVIEWER: ${{ github.actor }}
    steps:
      - name: create_pull-request
        uses: actions/checkout@v4
      - uses: actions/github-script@v6
        with:
          script: |
            await octokit.rest.pulls.create({
                title: "【リリース作業】CDN設定ファイル バージョン更新"
                head: $RELEASE_SETTINGS_BRANCH_NAME
                base: $RELEASE_BRANCH_NAME
                body: "このプルリクエストは${RELEASE_SETTINGS_BRANCH_NAME}から${RELEASE_BRANCH_NAME}への変更を提案します。"
            });
